CREATE TABLE CLIENTS (
    CLIENT_ID VARCHAR2(40 CHAR) PRIMARY KEY,
    FIRST_NAME VARCHAR2(40 CHAR) NOT NULL,
    LAST_NAME VARCHAR2(40 CHAR) NOT NULL,
    PHONE_NUMBER VARCHAR2(20 CHAR) NOT NULL,
    EMAIL VARCHAR2(40 CHAR) NOT NULL,
    DATE_OF_JOINING DATE NOT NULL
);

ALTER TABLE CLIENTS ADD CONSTRAINT CLIENTS_CHECK_PHONE_NUMBER
    CHECK (REGEXP_LIKE(PHONE_NUMBER, '[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\s\./0-9]*'));
    
ALTER TABLE CLIENTS ADD CONSTRAINT CLIENTS_CHECK_EMAIL
    CHECK (REGEXP_LIKE(EMAIL, '[[:alnum:]]+@[[:alnum:]]+\.[[:alnum:]]'));

CREATE TABLE ROOM_TYPES (
    TYPE_ID NUMBER(3) PRIMARY KEY,
    VIEW_NAME VARCHAR2(40 CHAR) NOT NULL,
    DAILY_COST NUMBER(4) NOT NULL CHECK (DAILY_COST > 0),
    ROOM_CAPACITY NUMBER(2) NOT NULL CHECK (ROOM_CAPACITY > 0)
);

CREATE TABLE SECTORS (
    SECTOR_ID NUMBER(3) PRIMARY KEY,
    SECTOR_SIZE NUMBER(3) CHECK (SECTOR_SIZE > 0 OR SECTOR_SIZE = NULL),
    SECTOR_LEVEL NUMBER(2) NOT NULL CHECK (SECTOR_LEVEL > 0)
);

CREATE TABLE ROOMS (
    ROOM_NUMBER NUMBER(3) PRIMARY KEY CHECK (ROOM_NUMBER > 0),
    TYPE_ID NUMBER(3) NOT NULL,
    SECTOR_ID NUMBER(3) NOT NULL,
    
    FOREIGN KEY(TYPE_ID) REFERENCES ROOM_TYPES(TYPE_ID),
    FOREIGN KEY(SECTOR_ID) REFERENCES SECTORS(SECTOR_ID)
);

CREATE TABLE DISCOUNTS (
    DISCOUNT_ID NUMBER(3) PRIMARY KEY,
    DISCOUNT_NAME VARCHAR2(40 CHAR) NOT NULL,
    DISCOUNT_VALUE NUMBER(3) NOT NULL CHECK (DISCOUNT_VALUE > 0 AND DISCOUNT_VALUE <= 100)
);

CREATE TABLE RESERVATIONS (
    RESERVATION_ID NUMBER(8) PRIMARY KEY,
    START_DATE DATE NOT NULL,
    END_DATE DATE NOT NULL,
    ESTIMATED_COST NUMBER(6) NOT NULL,
    
    CLIENT_ID VARCHAR2(40 CHAR) NOT NULL,
    ROOM_NUMBER NUMBER(3) NOT NULL,
    DISCOUNT_ID NUMBER(3),
    
    FOREIGN KEY(CLIENT_ID) REFERENCES CLIENTS(CLIENT_ID),
    FOREIGN KEY(ROOM_NUMBER) REFERENCES ROOMS(ROOM_NUMBER),
    FOREIGN KEY(DISCOUNT_ID) REFERENCES DISCOUNTS(DISCOUNT_ID)
);

ALTER TABLE RESERVATIONS ADD CONSTRAINT RESERVATIONS_CHECK_DATE
    CHECK (END_DATE - START_DATE >= 1);

CREATE TABLE OFFERS (
    OFFER_ID NUMBER(3) PRIMARY KEY,
    OFFER_NAME VARCHAR2(40 CHAR) NOT NULL,
    DAILY_COST NUMBER(3) NOT NULL CHECK (DAILY_COST > 0)
);

CREATE TABLE BOUGHT_OFFERS (
    BOUGHT_OFFER_ID NUMBER(6) PRIMARY KEY,
    START_DATE DATE NOT NULL,
    END_DATE DATE NOT NULL,
    ESTIMATED_COST NUMBER(3) NOT NULL,
    
    CLIENT_ID VARCHAR2(40 CHAR) NOT NULL,
    OFFER_ID NUMBER(3) NOT NULL,
    
    FOREIGN KEY(CLIENT_ID) REFERENCES CLIENTS(CLIENT_ID),
    FOREIGN KEY(OFFER_ID) REFERENCES OFFERS(OFFER_ID)
);

ALTER TABLE BOUGHT_OFFERS ADD CONSTRAINT BOUGHT_OFFERS_CHECK_DATE
    CHECK (END_DATE - START_DATE >= 1);
    
CREATE TABLE WORKERS (
    WORKER_ID NUMBER(6) PRIMARY KEY,
    FIRST_NAME VARCHAR2(40 CHAR) NOT NULL,
    LAST_NAME VARCHAR2(40 CHAR) NOT NULL,
    WORKER_ROLE VARCHAR2(40 CHAR),
    SECTOR_ID NUMBER(3),
    
    FOREIGN KEY(SECTOR_ID) REFERENCES SECTORS(SECTOR_ID)
);